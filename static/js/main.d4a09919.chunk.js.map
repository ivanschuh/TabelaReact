{"version":3,"sources":["service/api.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","id","setID","_React$useState5","_React$useState6","username","setUsername","_React$useState7","_React$useState8","posicao","setPosicao","handleClose","_React$useState9","_React$useState10","users","setUser","useEffect","get","then","response","data","map","userss","indice","company","name","react_default","a","createElement","className","TableContainer","component","Paper","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","text-align","TableBody","user","hover","key","&:last-child td, &:last-child th","border","onClick","i","us","scope","email","phone","address","street","suite","zipcode","city","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.d4a09919.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://jsonplaceholder.typicode.com\"\r\n  });\r\n  export default api;\r\n","import React from \"react\";\nimport api from './service/api';\n\n//Importaçoes para tabela\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\n// Importações para alerta\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport './App.css';\n\nexport default function App() {\n\n  //Modal\n  const [open, setOpen] = React.useState(false);\n  const [id, setID] = React.useState([]);\n  const [username, setUsername] = React.useState([]);\n  const [posicao, setPosicao] = React.useState([]);\n\n  function handleClickOpen(i, us) {\n    const indc = i-1;\n    setPosicao(indc);\n    setUsername(us);\n    setID(i);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //Chamada da API\n  const [users, setUser] = React.useState([]);\n\n  React.useEffect(() => {\n    api.get('/users')\n    .then(response => {\n      setUser(response.data.map(userss => {\n        let indice = userss.id - 1;\n\n        if (indice%3==0 && indice%5==0) {\n          userss.company.name = \"TC/SENCOM\"\n        }else {\n          if (indice%3==0) {\n            userss.company.name = \"TC\";\n          }\n          else if (indice%5==0){\n            userss.company.name = \"SENCOM\"\n          }\n          else {\n            userss.company.name = \"Sem Empresa\"\n          }\n        }\n        return userss\n      }));\n    });\n  }, \n  []);\n\n  return (\n    <div className=\"layout\">\n    <TableContainer component={Paper}>\n    <Table sx={{ minWidth: 400 }} aria-label=\"sticky table\">\n      <TableHead>\n        <TableRow>\n          <TableCell>Nome</TableCell>\n          <TableCell text-align=\"center\">Email</TableCell>\n          <TableCell text-align=\"center\">Telefone</TableCell>\n          <TableCell text-align=\"center\">Endereço Completo</TableCell>\n          <TableCell text-align=\"center\">Cidade</TableCell>\n          <TableCell text-align=\"center\">Empresa</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {users.map((user) => (\n          <TableRow\n            hover\n            key={user.id}\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            onClick={() => handleClickOpen(user.id, user.username)}\n          >\n            <TableCell component=\"th\" scope=\"row\" >{user.name}</TableCell>\n            <TableCell text-align=\"center\">{user.email}</TableCell>\n            <TableCell text-align=\"center\">{user.phone}</TableCell>\n            <TableCell text-align=\"center\">{user.address.street} {user.address.suite} {user.address.zipcode}</TableCell>\n            <TableCell text-align=\"center\">{user.address.city}</TableCell>\n            <TableCell text-align=\"center\">{user.company.name}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  </TableContainer>\n  <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Alerta!\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            O Username é: {username}<br></br>\n            ID: {id} <br></br>\n            Posição: {posicao}\n          </DialogContentText>   \n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Fechar</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}